main(){
  (Intro)
  (Ask for choice)
    if (choice 1)
      - user enters key they want to be encrypted
      - valid input (function)                       
      - if invalid, display error message
      - if valid, convert to uppercase function
      - ask for plaintext
      - ask for # of spaces
      - execute other functions
      - output final encryted text
    if (choice 2)
      - random key function
      - ask for plaintext
      - ask for # of spaces
      - execute functions
      - output final encrypted text
}
isValid(String input){ 
  - only supposed to contain letters
      - isalpha() function we could use on strings
  - check for same letters in consecutive order
  - check for length (26 max)
}
randomKey(){
 - provided by prof
}
convertToUpperCase(String input){
  - use toupper()
}
encryption(String input){
  - each letter in key corresponds to a letter in the alphabet
  - each letter in plaintext corresponds to each letter in key
      ex. ZHSRWOTEVXQPIABGYUCLFNJMDK
          ||||||||||||....
          ABCDEFGHIJKLMNOPQRSTUVWXYZ
          plaintext: THE Time Traveler
          THE Time Traveler
          ||| |||| ||||||||
          LEW LVIW ....
   - I think it is easier to encrypt it first then do the spacing later
}
spacing(String finalMessage, int spaces=5){
  - now split final message into the specified spaces 
}
